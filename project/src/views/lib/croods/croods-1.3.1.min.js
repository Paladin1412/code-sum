(this.nativeLog || function(e) {
    console.log(e)
})("WELCOME START CROODS JS FRAMEWORK 1.3.1, Build 2017-04-13 14:59."), this.getJSFMVersion = function() {
        return "1.3.1"
    },
    function(e, t) {
        "object" == typeof exports && "undefined" != typeof module ? module.exports = t() : "function" == typeof define && define.amd ? define(t) : e.croods = t()
    }(this, function() {
        "use strict";
        var e = ["volumedownbutton", "volumeupbutton", "searchbutton", "menubutton", "backbutton", "homebutton"],
            t = {
                copy: "BasePlugin.copy",
                loadUrl: "BasePlugin.loadUrl",
                close: "BasePlugin.close",
                goBack: "BasePlugin.goBack",
                exit: "BasePlugin.exit",
                request: "RoutePlugin.request",
                networkType: "BasePlugin.getNetworkType",
                bindButton: "BasePlugin.bindButton",
                unbindButton: "BasePlugin.unbindButton",
                appInfo: "BasePlugin.getAppInfo",
                deviceInfo: "BasePlugin.getDeviceInfo",
                getContact: "ContactsPlugin.get"
            },
            n = function(e) {
                var n = k(e),
                    r = {};
                if (!n.method) throw new Error('The arguments "method" is required and cannot be null!');
                if (O({
                        name: "method",
                        value: n.method,
                        type: T.STRING
                    }), O({
                        name: "timeout",
                        value: n.timeout,
                        type: T.NUMBER
                    }), r.t = n.timeout || 8e3, r.m = n.method, n.params && I(n.params)) throw new Error('The arguments "params" type must be object!');
                return b(n.params) || (r.p = n.params), n.params = r, D(t.request, n)
            },
            r = function(e) {
                var t = k(e);
                if (!t.action) throw new Error('The arguments "action" is required!');
                if (typeof t.action !== T.STRING || t.action.indexOf(".") === -1) throw new Error('The arguments "action" type must be string, like:"PluginName.ActionName"!');
                if (t.params && I(t.params)) throw new Error('The arguments "params" type must be object!');
                return D(t.action, t)
            },
            a = function(e) {
                var n = k(e);
                if (!n.content) throw new Error('The arguments "content" is required!');
                return O({
                    name: "content",
                    value: n.content,
                    type: T.STRING
                }), n.params = {
                    content: n.content
                }, D(t.copy, n)
            },
            o = function(e) {
                var n = k(e);
                return O({
                    name: "url",
                    value: n.url,
                    type: T.STRING
                }), n.params = {
                    url: n.url,
                    close: n.close || !1
                }, D(t.loadUrl, n)
            },
            i = function(e) {
                var n = k(e);
                return n.params = {}, O({
                    name: "callback",
                    value: n.callback,
                    type: T.STRING
                }), n.params.callback = n.callback || T.NULL_STR, D(t.close, n)
            },
            u = function(e) {
                return i(e)
            },
            s = function() {
                return D(t.exit, {})
            },
            c = function() {
                return D(t.goBack, {})
            },
            l = function(e) {
                var t = k(e),
                    n = t.jsApiList,
                    r = {};
                if (!(n instanceof Array)) throw new Error('The arguments "jsApiList" type must be array!');
                r = P(n, croods), typeof t.success === T.FUNCTION && t.success(r)
            },
            f = function(e) {
                return D(t.networkType, k(e))
            },
            m = function(e) {
                return D(t.appInfo, k(e))
            },
            p = function(e) {
                return D(t.deviceInfo, k(e))
            },
            d = function(e) {
                return h(t.bindButton, e)
            },
            g = function(e) {
                return h(t.unbindButton, e)
            },
            h = function(t, n) {
                var r = k(n);
                if (r.params = {}, !r.keycode) throw new Error('The arguments "keycode" is required and cannot be null!');
                if (!(r.keycode instanceof Array)) throw new Error('The arguments "keycode" type must be array !');
                if (0 === r.keycode.length) throw new Error('The arguments "keycode" cannot be null!');
                r.keycode = r.keycode.unique();
                for (var a = 0, o = r.keycode.length; a < o; a++)
                    if (!E(r.keycode[a], e)) throw new Error('The arguments "keycode" value ' + r.keycode[a] + " invalid!");
                return r.params.keycode = r.keycode, D(t, r)
            },
            v = function(e) {
                return D(t.getContact, k(e))
            },
            y = {},
            w = function(e) {
                y = k(e)
            },
            T = {
                ANDROID: "android",
                IOS: "ios",
                IPHONE: "iPhone",
                IPAD: "iPad",
                OBJECT: "object",
                STRING: "string",
                BOOLEAN: "boolean",
                NUMBER: "number",
                FUNCTION: "function",
                TIMEOUT: "TIMEOUT",
                NULL_STR: ""
            },
            E = function(e, t) {
                if (t && t instanceof Array) {
                    for (var n = 0; n < t.length; n++)
                        if (e === t[n]) return !0;
                    return !1
                }
                return !1
            },
            P = function(e, t) {
                var n = {},
                    r = null;
                if (e && e instanceof Array)
                    for (var a = 0; a < e.length; a++) {
                        r = e[a].split("."), n[e[a]] = !1;
                        for (var o in t)
                            if (o === r[0])
                                if (typeof t[o] === T.OBJECT && r[1])
                                    for (var i in t[o]) i === r[1] && (n[e[a]] = !0);
                                else n[e[a]] = !0
                    }
                return n
            };
        Array.prototype.unique = function() {
            for (var e = this, t = [], n = {}, r = 0; r < this.length; r++) n[e[r]] || (t.push(e[r]), n[e[r]] = 1);
            return t
        };
        var N, b = function(e) {
                for (var t in e) return !1;
                return !0
            },
            I = function(e) {
                return typeof e !== T.OBJECT || e instanceof Array
            },
            k = function(e) {
                var t = e || {};
                if (I(t)) throw new Error("The arguments type must be object!");
                return t
            },
            O = function(e) {
                if (e.value && e.type && typeof e.value !== e.type) throw new Error('The arguments "' + e.name + '" type must be ' + e.type + "!")
            },
            R = function() {
                var e = navigator.userAgent,
                    t = T.ANDROID;
                return e.indexOf(T.IPHONE) === -1 && e.indexOf(T.IPAD) === -1 || (t = T.IOS), t
            },
            S = function(e) {
                var t = navigator.userAgent,
                    n = t.indexOf(T.ANDROID),
                    r = 4.4;
                n !== -1 && (r = parseFloat(t.slice(n + 8, n + 13))), (S = r < 4.4 ? function(e) {
                    window.prompt("iflytek:" + JSON.stringify(e))
                } : function(e) {
                    croodsBridge.exec("iflytek:" + JSON.stringify(e))
                })(e)
            },
            B = function() {
                var e = document.createElement("iframe");
                return e.style.display = "none", e.src = "", document.body.appendChild(e), e
            },
            A = {
                log: function(e) {
                    y.debug && console.log(e)
                },
                alert: function(e) {
                    y.debug && window.alert(e)
                }
            },
            C = {
                callbackId: Math.floor(1e10 * Math.random()),
                commandQueue: [],
                callbacks: {},
                $deferred: function() {
                    var e = {};
                    return e.success = function(e) {
                        return typeof e === T.FUNCTION && (this._success = e), this
                    }, e.fail = function(e) {
                        return typeof e === T.FUNCTION && (this._fail = e), this
                    }, e.complete = function(e) {
                        return typeof e === T.FUNCTION && (this._complete = e), this
                    }, e.cancel = function(e) {
                        return typeof e === T.FUNCTION && (this._cancel = e), this
                    }, e
                },
                callbackStatus: {
                    OK: 1e4,
                    CANCEL: 10007,
                    TIMEOUT: 10012,
                    TIMEOUT_ROUTER: 40001,
                    OK_ROUTER: 1,
                    FAIL_ROUTER: 0
                },
                create: function(e, t) {
                    window[e] = function(n) {
                        var r = C.callbacks[e];
                        U(r, n, t)
                    }
                }
            },
            U = function(e, t, n) {
                var r = C.callbackStatus,
                    a = t.code,
                    o = t.message;
                switch (a) {
                    case r.OK:
                        var i = o ? JSON.parse(o) : {};
                        if (void 0 == i.status) {
                            e.success && e.success(i), setTimeout(function() {
                                n && n._success && n._success(i)
                            }, 0);
                            break
                        }
                        if (A.alert(JSON.stringify(t)), i.status == r.OK_ROUTER) {
                            e.success && e.success(i.result), setTimeout(function() {
                                n && n._success && n._success(i.result)
                            }, 0);
                            break
                        }
                        i.status == r.FAIL_ROUTER && (e.fail && e.fail(i.errorCode + ": " + i.errorMessage), setTimeout(function() {
                            n && n._fail && n._fail(i.errorCode + ": " + i.errorMessage)
                        }, 0));
                        break;
                    case r.CANCEL:
                        e.cancel && e.cancel(t), setTimeout(function() {
                            n && n._cancel && n._cancel(t)
                        }, 0);
                        break;
                    case r.TIMEOUT_ROUTER:
                        t.status = T.TIMEOUT;
                        break;
                    default:
                        e.fail && e.fail(a + ": " + o), setTimeout(function() {
                            n && n._fail && n._fail(a + ": " + o)
                        }, 0)
                }
                e.complete && e.complete(t), setTimeout(function() {
                    n && n._complete && n._complete(t)
                }, 0)
            },
            L = {
                args: function(e, t) {
                    var n = e.split("."),
                        r = n[0] + C.callbackId++,
                        a = {},
                        o = {
                            service: n[0],
                            action: n[1]
                        };
                    return typeof t.success === T.FUNCTION && (a.success = t.success), typeof t.fail === T.FUNCTION && (a.fail = t.fail), typeof t.complete === T.FUNCTION && (a.complete = t.complete), typeof t.cancel === T.FUNCTION && (a.cancel = t.cancel), C.callbacks[r] = a, o.callback = r, o.params = t.params || {}, o
                },
                android: function(e) {
                    A.log(JSON.stringify(e)), S(e)
                },
                ios: function(e) {
                    C.commandQueue.push(e), N = N || B(), N.src = "iflytek://ready"
                }
            },
            D = function(e, t) {
                var n = L.args(e, t),
                    r = n.callback,
                    a = C.callbacks[r],
                    o = b(a) ? new C.$deferred : null;
                return C.create(r, o), L[R()](n), o
            },
            q = function() {
                var e = JSON.stringify(C.commandQueue);
                return C.commandQueue = [], A.log(e), e
            },
            M = function(e) {
                delete window[e], delete C.callbacks[e], A.log("Destroy Function: " + e)
            },
            _ = {
                open: "GeoPlugin.open",
                close: "GeoPlugin.close",
                get: "GeoPlugin.getLocation"
            },
            x = function(e) {
                var t = k(e);
                return t.params = {}, O({
                    name: "interval",
                    value: t.interval,
                    type: T.NUMBER
                }), t.params.interval = t.interval || 5e3, D(_.open, t)
            },
            F = function(e) {
                return D(_.close, k(e))
            },
            G = function(e) {
                var t = k(e);
                if (!t.lng) throw new Error('The arguments "lng" is required!');
                if (O({
                        name: "lng",
                        value: t.lng,
                        type: T.NUMBER
                    }), !t.lat) throw new Error('The arguments "lat" is required!');
                return O({
                    name: "lat",
                    value: t.lat,
                    type: T.NUMBER
                }), t.params = {
                    lng: t.lng,
                    lat: t.lat
                }, D(_.get, t)
            },
            z = {
                shareContent: "SharePlugin.shareContent",
                setPlatformConfig: "SharePlugin.setPlatformConfig"
            },
            j = {
                QQ: 1,
                QZone: 2,
                SinaWeibo: 3,
                WeChatSession: 4,
                WeChatTimeline: 5,
                WeChatFav: 6
            },
            J = {
                Text: 0,
                Image: 1,
                WebPage: 2,
                Music: 3,
                Video: 4,
                Apps: 5,
                File: 6
            },
            Q = function(e) {
                var t = k(e);
                if (!t.platform) throw new Error('The arguments "platform" is required !');
                if (O({
                        name: "platform",
                        value: t.platform,
                        type: T.NUMBER
                    }), !t.shareParams) throw new Error('The arguments "shareParams" is required!');
                if (I(t.shareParams)) throw new Error('The arguments "shareParams" type must be object!');
                if (typeof t.shareParams.type !== T.NUMBER) throw new Error('The arguments "shareParams.type" is required and type must be number!');
                if (!t.shareParams.text) throw new Error('The arguments "shareParams.text" is required!');
                return O({
                    name: "shareParams.text",
                    value: t.shareParams.text,
                    type: T.STRING
                }), t.params = {
                    platform: t.platform,
                    shareParams: t.shareParams
                }, D(z.shareContent, t)
            },
            W = function(e) {
                var t = k(e);
                if (typeof t.platform !== T.NUMBER) throw new Error('The arguments "platform" is required and type must be number!');
                if (!t.config) throw new Error('The arguments "config" is required!');
                if (I(t.config)) throw new Error('The arguments "config" type must be object!');
                return t.params = {
                    platform: t.platform,
                    config: t.config
                }, D(z.setPlatformConfig, t)
            },
            V = {
                start: "DownloadPlugin.start",
                listener: "DownloadPlugin.listener",
                cancel: "DownloadPlugin.cancel",
                open: "FilePlugin.open",
                choose: "FilePlugin.choose",
                upload: "UploadPlugin.upload",
                unzip: "FilePlugin.unzip"
            },
            K = function(e) {
                var t = k(e);
                if (t.params = {}, !t.url) throw new Error('The arguments "url" is required and cannot be null!');
                return O({
                    name: "url",
                    value: t.url,
                    type: T.STRING
                }), t.params.url = t.url, D(V.start, t)
            },
            H = function(e) {
                return D(V.listener, k(e))
            },
            $ = function(e) {
                return D(V.cancel, k(e))
            },
            Z = function(e) {
                var t = k(e);
                if (t.params = {}, !t.filePath) throw new Error('The arguments "filePath" is required and cannot be null!');
                return O({
                    name: "filePath",
                    value: t.filePath,
                    type: T.STRING
                }), t.params.filePath = t.filePath, D(V.open, t)
            },
            X = function(e) {
                var t = k(e);
                return t.params = {}, O({
                    name: "path",
                    value: t.path,
                    type: T.STRING
                }), O({
                    name: "reg",
                    value: t.reg,
                    type: T.STRING
                }), O({
                    name: "recursive",
                    value: t.recursive,
                    type: T.BOOLEAN
                }), t.params.recursive = typeof t.recursive === T.BOOLEAN && t.recursive, t.params.path = t.path ? t.path : void 0, t.params.reg = t.reg ? t.reg : void 0, D(V.choose, t)
            },
            Y = function(e) {
                var t = k(e);
                if (t.params = {}, !t.method) throw new Error('The arguments "method" is required and cannot be null!');
                if (O({
                        name: "method",
                        value: t.method,
                        type: T.STRING
                    }), O({
                        name: "fileSizeLimit",
                        value: t.fileSizeLimit,
                        type: T.NUMBER
                    }), t.params.method = t.method, t.fileSizeLimit && (t.params.fileSizeLimit = t.fileSizeLimit), t.files && I(t.files)) throw new Error('The arguments "files" type must be object!');
                if (b(t.files)) throw new Error('The arguments "files" is required and cannot be null!!');
                if (t.params.files = t.files, t.formData && I(t.formData)) throw new Error('The arguments "formData" type must be object!');
                return b(t.formData) || (t.params.formData = t.formData), D(V.upload, t)
            },
            ee = function(e) {
                var t = k(e);
                if (t.params = {}, !t.filePath) throw new Error('The arguments "filePath" is required and cannot be null!');
                return O({
                    name: "filePath",
                    value: t.filePath,
                    type: T.STRING
                }), t.params.filePath = t.filePath, D(V.unzip, t)
            },
            te = {
                add: "StoragePlugin.add",
                get: "StoragePlugin.get",
                getAll: "StoragePlugin.getAll",
                remove: "StoragePlugin.remove",
                removeAll: "StoragePlugin.removeAll"
            },
            ne = {
                add: function(e) {
                    var t = k(e);
                    if (!t.params || b(t.params)) throw new Error('The arguments "params" is required!');
                    if (I(t.params)) throw new Error('The arguments "params" type must be object!');
                    return D(te.add, t)
                },
                get: function(e) {
                    var t = k(e);
                    if (t.params = {}, !t.key) throw new Error('The arguments "key" is required!');
                    return O({
                        name: "key",
                        value: t.key,
                        type: T.STRING
                    }), t.params.key = t.key, D(te.get, t)
                },
                getAll: function(e) {
                    return D(te.getAll, k(e))
                },
                remove: function(e) {
                    var t = k(e);
                    if (t.params = {}, !t.key) throw new Error('The arguments "key" is required!');
                    return O({
                        name: "key",
                        value: t.key,
                        type: T.STRING
                    }), t.params.key = t.key, D(te.remove, t)
                },
                removeAll: function(e) {
                    return D(te.removeAll, k(e))
                }
            },
            re = ["blink", "mouth", "yaw", "nod"],
            ae = ["iat", "search", "video", "poi", "music", "asr"],
            oe = ["zh_cn", "en_us"],
            ie = ["mandarin", "cantonese", "henanese"],
            ue = {
                take: "ImagePlugin.takePhoto",
                choose: "ImagePlugin.choose",
                previewImage: "ImagePlugin.preview",
                start: "AudioPlugin.startRecord",
                listener: "AudioPlugin.recordListener",
                stop: "AudioPlugin.stopRecord",
                play: "AudioPlugin.startPlay",
                playListener: "AudioPlugin.playListener",
                stopVoice: "AudioPlugin.stopPlay",
                livenessDetect: "LivenessPlugin.detect",
                scanning: "QRCodePlugin.scanCode",
                generate: "QRCodePlugin.generate",
                startIat: "SpeechPlugin.startIat",
                stopIat: "SpeechPlugin.stopIat"
            },
            se = function(e) {
                return D(ue.take, k(e))
            },
            ce = function(e) {
                var t = k(e);
                return O({
                    name: "count",
                    value: t.count,
                    type: T.NUMBER
                }), t.params = {
                    count: t.count || 1
                }, D(ue.choose, t)
            },
            le = function(e) {
                var t = k(e);
                if (t.paths && !(t.paths instanceof Array)) throw new Error('The arguments "paths" type must be array!');
                if ("" === t.index || void 0 === t.index || null === t.index) throw new Error('The arguments "index" is required!');
                return O({
                    name: "index",
                    value: t.index,
                    type: T.NUMBER
                }), t.params = {
                    paths: t.paths,
                    index: t.index
                }, D(ue.previewImage, t)
            },
            fe = function(e) {
                var t = k(e);
                if (t.actions) {
                    if (!(t.actions instanceof Array)) throw new Error('The arguments "actions" type must be array!');
                    if (t.actions = t.actions.unique(), !E(re[0], t.actions)) throw new Error("The arguments 'actions' value must has " + t.actions[0] + " !");
                    for (var n = 0, r = t.actions.length; n < r; n++)
                        if (!E(t.actions[n], re)) throw new Error("The arguments 'actions' value " + t.actions[n] + " invalid!")
                }
                return O({
                    name: "soundNotice",
                    value: t.soundNotice,
                    type: T.BOOLEAN
                }), t.params = {
                    actions: t.actions || re,
                    soundNotice: typeof t.soundNotice !== T.BOOLEAN || t.soundNotice
                }, D(ue.livenessDetect, t)
            },
            me = function(e) {
                return D(ue.scanning, k(e))
            },
            pe = function(e) {
                var t = k(e);
                return O({
                    name: "content",
                    value: t.content,
                    type: T.STRING
                }), O({
                    name: "size",
                    value: t.size,
                    type: T.NUMBER
                }), t.params = {
                    content: t.content || "",
                    size: t.size || 200
                }, D(ue.generate, t)
            },
            de = function(e) {
                return D(ue.start, k(e))
            },
            ge = function(e) {
                return D(ue.listener, k(e))
            },
            he = function(e) {
                return D(ue.stop, k(e))
            },
            ve = function(e) {
                var t = k(e);
                if (t.params = {}, !t.filePath) throw new Error('The arguments "filePath" is required!');
                return O({
                    name: "filePath",
                    value: t.filePath,
                    type: T.STRING
                }), t.params.filePath = t.filePath, D(ue.play, t)
            },
            ye = function(e) {
                return D(ue.playListener, k(e))
            },
            we = function(e) {
                return D(ue.stopVoice, k(e))
            },
            Te = function(e) {
                var t = k(e);
                if (O({
                        name: "domain",
                        value: t.domain,
                        type: T.STRING
                    }), t.domain && !E(t.domain, ae)) throw new Error('The arguments "domain" value invalid!');
                if (O({
                        name: "language",
                        value: t.language,
                        type: T.STRING
                    }), t.language && !E(t.language, oe)) throw new Error('The arguments "language" value invalid!');
                if (O({
                        name: "accent",
                        value: t.accent,
                        type: T.STRING
                    }), t.accent && !E(t.accent, ie)) throw new Error('The arguments "accent" value invalid!');
                if (O({
                        name: "vadBos",
                        value: t.vadBos,
                        type: T.NUMBER
                    }), t.vadBos && (t.vadBos < 1e3 || t.vadBos > 1e4)) throw new Error('The arguments "vadBos" value between 1000 and 10000!');
                if (O({
                        name: "vadEos",
                        value: t.vadEos,
                        type: T.NUMBER
                    }), t.vadEos && (t.vadEos < 0 || t.vadEos > 1e4)) throw new Error('The arguments "vadEos" value between 0 and 10000!');
                return O({
                    name: "isSave",
                    value: t.isSave,
                    type: T.BOOLEAN
                }), O({
                    name: "hasDot",
                    value: t.hasDot,
                    type: T.BOOLEAN
                }), t.params = {
                    domain: t.domain ? t.domain : void 0,
                    language: t.language ? t.language : void 0,
                    accent: t.accent ? t.accent : void 0,
                    vadBos: t.vadBos && String(t.vadBos),
                    vadEos: t.vadEos && String(t.vadEos),
                    isSave: t.isSave,
                    hasDot: t.hasDot
                }, D(ue.startIat, t)
            };
        return Object.freeze({
            nativeFetchQueue: q,
            callbackDestroy: M,
            openLocation: x,
            closeLocation: F,
            getLocation: G,
            sharePlatform: j,
            shareType: J,
            shareContent: Q,
            setPlatformConfig: W,
            upload: Y,
            startDownload: K,
            downloadListener: H,
            cancelDownload: $,
            openFile: Z,
            chooseFile: X,
            unzip: ee,
            storage: ne,
            config: w,
            ajax: n,
            customPlugin: r,
            copy: a,
            loadUrl: o,
            pageClose: i,
            closePage: u,
            goBack: c,
            exit: s,
            checkJsApi: l,
            getNetworkType: f,
            getAppInfo: m,
            getDeviceInfo: p,
            bindButton: d,
            unbindButton: g,
            getContact: v,
            takePhoto: se,
            chooseImage: ce,
            previewImage: le,
            livenessDetect: fe,
            scanQRCode: me,
            createQRCode: pe,
            startRecord: de,
            recordListener: ge,
            stopRecord: he,
            playVoice: ve,
            playListener: ye,
            stopVoice: we,
            iflyIat: Te
        })
    });