<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"

       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.alibaba.com/schema/stat"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd

        http://www.alibaba.com/schema/stat http://www.alibaba.com/schema/stat.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">


    <mvc:annotation-driven/>
    <context:component-scan base-package="com.iflytek.sgy" >
    </context:component-scan>



    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="maxActive" value="${jdbc.pool.maxActive}"/>
        <property name="minIdle" value="${jdbc.pool.minIdle}"/>
        <property name="initialSize" value="${jdbc.pool.initialSize}"/>
    </bean>

    <!-- hibernate 4 配置 -->
    <bean id="sessionFactory"
          class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="namingStrategy">
            <bean class="org.hibernate.cfg.ImprovedNamingStrategy" />
        </property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
                <prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
                <prop key="hibernate.connection.release_mode">after_transaction</prop>
                <prop key="hibernate.jdbc.use_streams_for_binary">true</prop>
                <prop key="hibernate.jdbc.batch_size">50</prop>
                <prop key="connection.autocommit">true</prop>
                <prop key="hibernate.cache.provider_class">org.hibernate.cache.ehcache.management.impl.EhcacheHibernate
                </prop>
                <prop key="hibernate.cache.provider_configuration_file_resource_path">${hibernate.ehcache_config_file}</prop>
            </props>
        </property>
        <!-- 自动扫描注解方式配置的hibernate类文件 -->
        <property name="packagesToScan">
            <list>
                <value>com.iflytek.sgy.wjewt.domain.entity</value>
            </list>
        </property>
    </bean>

    <!-- 事务管理器配置,单数据源事务 -->
    <bean id="transactionManager"
          class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>

    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>

    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <tx:advice id="transactionAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="process*" propagation="REQUIRED" />
            <tx:method name="save*" propagation="REQUIRED" />
            <tx:method name="add*" propagation="REQUIRED" />
            <tx:method name="submit*" propagation="REQUIRED" />
            <tx:method name="finish*" propagation="REQUIRED" />
            <tx:method name="evaluate*" propagation="REQUIRED" />
            <tx:method name="set*" propagation="REQUIRED" />
            <tx:method name="doEvent*" propagation="REQUIRED" />
            <tx:method name="create*" propagation="REQUIRED" />
            <tx:method name="insert*" propagation="REQUIRED" />
            <tx:method name="update*" propagation="REQUIRED" />
            <tx:method name="merge*" propagation="REQUIRED" />
            <tx:method name="del*" propagation="REQUIRED" />
            <tx:method name="remove*" propagation="REQUIRED" />
            <tx:method name="put*" propagation="REQUIRED" />
            <tx:method name="get*" propagation="REQUIRED" read-only="true" />
            <tx:method name="count*" propagation="REQUIRED" read-only="true" />
            <tx:method name="find*" propagation="REQUIRED" read-only="true" />
            <tx:method name="list*" propagation="REQUIRED" read-only="true" />
            <tx:method name="*" propagation="REQUIRED" read-only="true" />
        </tx:attributes>
    </tx:advice>

    <!-- 只对业务逻辑层实施事务 -->
    <aop:config proxy-target-class="true">
        <aop:pointcut id="transactionPointcut"
                      expression="execution(* com.iflytek.sgy.wjewt.service.*+.*(..))" />
        <aop:advisor pointcut-ref="transactionPointcut"
                     advice-ref="transactionAdvice" />
    </aop:config>

	<bean id="restTemplate" class="org.springframework.web.client.RestTemplate">
		<property name="messageConverters">
			<list>
				<bean class="org.springframework.http.converter.FormHttpMessageConverter" />
				<bean class="org.springframework.http.converter.StringHttpMessageConverter">
					<property name="supportedMediaTypes">
						<list>
							<value>text/plain;charset=UTF-8</value>
						</list>
					</property>
				</bean>
				<bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter" />
			</list>
		</property>
	</bean>

    <!-- uaac client 参数 -->
    <bean id="uaacConstant" class="com.iflytek.uaac.client.constant.UaacConstant">
        <property name="appCode" value="${uaac.client.appCode}" />
        <property name="appAuthCode" value="${uaac.client.appCode}" />
        <property name="appSecurityCode" value="${uaac.client.appCode}" />
        <property name="casContext" value="${cas.context}" />
        <property name="casValidContext" value="${cas.valid.context}" />
        <property name="casContextLogin" value="${cas.context.login:/login}" />
        <property name="casContextLogout" value="${cas.context.logout:/logout}" />
        <property name="resturl" value="${uaac.service.url}" />
        <property name="casClientContext" value="${cas.client.context}" />
    </bean>
    <bean id="uaacClientFilter" class="com.iflytek.uaac.client.rest.filter.FilterChainProxy">
        <property name="uaacConstant" ref="uaacConstant" />
    </bean>

    <!-- 定义受环境影响易变的配置 -->
    <beans profile="local">
        <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
            <property name="locations">
                <list>
                    <value>classpath*:config/config.properties</value>
                </list>
            </property>
        </bean>
    </beans>
    <beans profile="deploy">
        <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
            <property name="locations">
                <list>
                    <value>file:/iflytek/zhcs/config/busi-mgr/config.properties</value>
                </list>
            </property>
        </bean>
    </beans>

</beans>